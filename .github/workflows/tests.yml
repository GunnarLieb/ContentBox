name: Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      DB_USER: root
      DB_PASSWORD: root
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        cfengine:  [ "lucee@5", "adobe@2018", "adobe@2021" ]
        coldboxVersion: [ "^6.0.0" ]
        experimental: [ false ]
        include:
          - cfengine: "adobe@2023"
            coldboxVersion: "^6.0.0"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "lucee@5"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "adobe@2018"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "adobe@2021"
            experimental: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Database and Fixtures
        run: |
          sudo systemctl start mysql.service
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -e 'CREATE DATABASE contentbox;'
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} < tests/resources/sql/mysql/contentbox.sql

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@v2.0.1
        with:
          version: 5.6.1

      - name: Setup .env For Runner
        run: |
          touch .env
          printf "ENVIRONMENT=development\n" >> .env
          printf "DB_HOST=127.0.0.1\n" >> .env
          printf "DB_DATABASE=contentbox\n" >> .env
          printf "DB_DRIVER=MySQL\n" >> .env
          printf "DB_USER=${{ env.DB_USER }}\n" >> .env
          printf "DB_PASSWORD=${{ env.DB_PASSWORD }}\n" >> .env
          printf "DB_CLASS=com.mysql.cj.jdbc.Driver\n" >> .env
          printf "DB_BUNDLEVERSION=8.0.19\n" >> .env
          printf "DB_BUNDLENAME=com.mysql.cj\n" >> .env

      - name: Add Hibernate Logging
        if: "${{ matrix.cfengine != 'lucee@5' }}"
        run: |
          # Log4j Hibernate Debug
          mkdir -p .engines/acf2018/WEB-INF/cfusion/lib/
          mkdir -p .engines/acf2021/WEB-INF/cfusion/lib/
          cp build/resources/log4j.properties .engines/acf2018/WEB-INF/cfusion/lib/
          cp build/resources/log4j.properties .engines/acf2021/WEB-INF/cfusion/lib/

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v1
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}

      - name: Install Dependencies
        run: |

      - name: Install Test Harness with ColdBox ${{ matrix.coldboxVersion }}
        run: |
          box package set dependencies.coldbox=${{ matrix.coldboxVersion }}
          # Site dependencies
          box install
          # ContentBox dependencies
          cd modules/contentbox && box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          # Startup the Server
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug
          # Test site build up
          curl http://127.0.0.1:8589

      - name: Run Web App Tests
        run: |
          mkdir tests/results/web
          box package set testbox.runner="http://127.0.0.1:8589/tests/runner.cfm"
          box testbox run --verbose outputFile=tests/results/web/test-results outputFormats=json,antjunit

      - name: Run API Tests
        run: |
          mkdir tests/results/api
          box package set testbox.runner="http://127.0.0.1:8589/tests/runner-api.cfm"
          box testbox run --verbose outputFile=tests/results/api/test-results outputFormats=json,antjunit

      - name: Run Swagger Tests
        run: |
          curl "http://127.0.0.1:8589/index.cfm/cbswagger?debugmode=false&debugpassword=cb" -o "tests/results/contentbox-swagger.json"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: contentbox-test-results-${{ matrix.cfengine }}
          path: |
            tests/results/**/*

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ContentBox tests failed :cry:, check them out here: https://github.com/Ortus-Solutions/ContentBox/actions'
          SLACK_TITLE: ContentBox Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Failure Debugging Info
        if: ${{ failure() }}
        run: |
          if [[ "{{ matrix.cfengine }}" == "adobe@2018" ]] ; then
            cat .engines/acf2018/WEB-INF/cfusion/logs/hibernatesql.log
          fi
          if [[ "{{ matrix.cfengine }}" == "adobe@2021" ]] ; then
            cat .engines/acf2021/WEB-INF/cfusion/logs/hibernatesql.log
          fi
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debugging Info To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            .engines/**/logs/*
            .engines/**/WEB-INF/cfusion/logs/*