name: ContentBox CI

# Only on Development we build snapshots
on:
  push:
    branches:
      - development
      - master

jobs:
  #############################################
  # Tests First baby! We fail, no build :(
  #############################################
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      DB_USER: root
      DB_PASSWORD: root
    strategy:
      fail-fast: false
      matrix:
        cfengine: [ "lucee@5", "adobe@2016", "adobe@2018" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Database and Fixtures
        run: |
          sudo /etc/init.d/mysql start
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -e 'CREATE DATABASE contentbox;'
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} < tests/resources/sql/mysql/contentbox.sql

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup CommandBox
        uses: elpete/setup-commandbox@v1.0.0

      - name: Setup .env For Runner
        run: |
          touch .env
          printf "DB_HOST=127.0.0.1\n" >> .env
          printf "DB_DATABASE=contentbox\n" >> .env
          printf "DB_DRIVER=MySQL\n" >> .env
          printf "DB_USER=${{ env.DB_USER }}\n" >> .env
          printf "DB_PASSWORD=${{ env.DB_PASSWORD }}\n" >> .env
          printf "DB_CLASS=com.mysql.cj.jdbc.Driver\n" >> .env
          printf "DB_BUNDLEVERSION=8.0.19\n" >> .env
          printf "DB_BUNDLENAME=com.mysql.cj\n" >> .env

      - name: Add Hibernate Logging
        if: "${{ matrix.cfengine != 'lucee@5' }}"
        run: |
          # Log4j Hibernate Debug
          mkdir -p .engines/acf2016/WEB-INF/cfusion/lib/
          mkdir -p .engines/acf2018/WEB-INF/cfusion/lib/
          cp build/resources/log4j.properties .engines/acf2016/WEB-INF/cfusion/lib/
          cp build/resources/log4j.properties .engines/acf2018/WEB-INF/cfusion/lib/

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v1
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}

      - name: Install Dependencies
        run: |
          # Site dependencies
          box install
          # ContentBox dependencies
          cd modules/contentbox && box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --debug
          curl http://127.0.0.1:8589

      - name: Run Web App Tests
        run: |
          mkdir tests/results/web
          box package set testbox.runner="http://127.0.0.1:8589/tests/runner.cfm"
          box testbox run --verbose outputFile=tests/results/web/test-results outputFormats=json,antjunit

      - name: Run API Tests
        run: |
          mkdir tests/results/api
          box package set testbox.runner="http://127.0.0.1:8589/tests/runner-api.cfm"
          box testbox run --verbose outputFile=tests/results/api/test-results outputFormats=json,antjunit

      - name: Run Swagger Tests
        run: |
          curl http://127.0.0.1:8589/index.cfm/cbswagger?debugmode=false&debugpassword=cb > tests/results/contentbox-swagger.json

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: contentbox-test-results-${{ matrix.cfengine }}
          path: |
            tests/results/**/*

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: contentbox
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ContentBox tests failed :cry:, check them out here: https://github.com/Ortus-Solutions/ContentBox/actions'
          SLACK_TITLE: ContentBox Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Failure Debugging Info
        if: ${{ failure() }}
        run: |
          if [[ "{{ matrix.cfengine }}" == "adobe@2016" ]] ; then
            cat .engines/acf2016/WEB-INF/cfusion/logs/hibernatesql.log
          fi
          if [[ "{{ matrix.cfengine }}" == "adobe@2018" ]] ; then
            cat .engines/acf2018/WEB-INF/cfusion/logs/hibernatesql.log
          fi
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debugging Info To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            .engines/**/logs/*
            .engines/**/WEB-INF/cfusion/logs/*

  #############################################
  # Build ContentBox
  #############################################
  build:
    name: Build ContentBox
    needs: tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup CommandBox
        uses: elpete/setup-commandbox@v1.0.0

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v1
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'modules/contentbox/box.json' ) }}

      - name: Install Build Dependencies
        run: |
          box install --production

      - name: Setup Environment Variables For Build Process
        id: current_version
        run: |
          echo "VERSION=`cat box.json | jq '.version' -r`" >> $GITHUB_ENV
          # master or snapshot
          echo "BRANCH=master" >> $GITHUB_ENV
          if [[ "{{ GITHUB_REF }}" == "refs/heads/development" ]] ; then
            echo "BRANCH=development" >> $GITHUB_ENV
          fi
          echo "Building ContentBox for ${{ env.BRANCH }}"

      - name: Download Test Artifacts
        uses: actions/download-artifact@v2
        with:
          path: tests/results

      - name: Build Docs
        run: |
          # Normalize swagger doc results
          cp tests/results/contentbox-test-results-lucee@5/contentbox-swagger.json tests/results/
          # Run Docs Build
          box run-script build:allDocs

      - name: Build ContentBox Variants
        run: |
          ant -Dcontentbox.version=${{ env.VERSION }} -Dbuild.number=${{ github.run_number }} -Dbuild.branch=${{ env.BRANCH }} -f build/build.xml
          cat build/build-contentbox/module/box.json

      - name: List Artifacts
        run: ls -R
        working-directory: build/build-contentbox

      - name: Store Artifacts
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: contentbox-builds
          path: |
            artifacts/**/*
            build/build-contentbox/**/*

      - name: Inform Slack
        if: ${{ always() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: contentbox
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ContentBox Build Variants ${{ job.status }}!'
          SLACK_TITLE: "ContentBox Build"
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  #############################################
  # Upload Artifacts to S3
  #############################################
  upload_artifacts:
    name: Upload Artifacts to S3
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: .tmp

      - name: Upload Binaries to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: "downloads.ortussolutions.com"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          SOURCE_DIR: ".tmp/contentbox-builds/artifacts"
          DEST_DIR: "ortussolutions"

      - name: Upload API Docs to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: "apidocs.ortussolutions.com"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          SOURCE_DIR: ".tmp/contentbox-builds/build/build-contentbox/apidocs"
          DEST_DIR: "contentbox/${{ env.VERSION }}"

      - name: Inform Slack
        if: ${{ always() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: contentbox
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ContentBox Upload to S3 ${{ job.status }}!'
          SLACK_TITLE: "ContentBox Artifacts to S3"
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}


  #############################################
  # Publish To ForgeBox
  #############################################
  publish:
    name: Publish to ForgeBox.io
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: .tmp

      - name: Setup CommandBox
        uses: elpete/setup-commandbox@v1.0.0
        with:
          forgeboxAPIKey: ${{ secrets.FORGEBOX_API_TOKEN }}

      - name: Publish
        run: |
          cd .tmp/contentbox-builds/build/build-contentbox/module && box forgebox publish
          cd .tmp/contentbox-builds/build/build-contentbox/site && box forgebox publish
          cd .tmp/contentbox-builds/build/build-contentbox/installer && box forgebox publish
          cd .tmp/contentbox-builds/build/build-contentbox/installer-module && box forgebox publish

      - name: Inform Slack
        if: ${{ always() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: contentbox
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ContentBox Publish to ForgeBox ${{ job.status }}!'
          SLACK_TITLE: "ContentBox Publish"
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}